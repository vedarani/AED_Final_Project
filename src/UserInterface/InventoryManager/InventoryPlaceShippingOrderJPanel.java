/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.InventoryManager;

import Business.County.County;
import Business.Enterprise.Enterprise;
import Business.Order.Order;
import Business.Produce.Produce;
import Business.UserAccount.UserAccount;
import Business.Vendor.Vendor;
import Business.WorkQueue.ShippingOrderWR;
import static UserInterface.MainJFrame.mainPanel;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vedar
 */
public class InventoryPlaceShippingOrderJPanel extends javax.swing.JPanel {
   
    private UserAccount userAccount;
    private ArrayList<Enterprise> countyEnterpriseArray;
    private Vendor vendor;
    /**
     * Creates new form InventoryPlaceShippingOrder
     */
    public InventoryPlaceShippingOrderJPanel(UserAccount userAccount, ArrayList<Enterprise> countyEnterpriseArray, Vendor vendor) {
        initComponents();
        this.userAccount = userAccount;
        this.countyEnterpriseArray = countyEnterpriseArray;
        this.vendor = vendor;
        
        txtQuantity.setText("1");
        txtTotalPrice.setText("0");
        DefaultTableModel model1 = (DefaultTableModel) tblProduce.getModel();
        model1.setRowCount(0);
        
        lblQuantityValidation.setVisible(false);
        populatePicker();
        
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.setRowCount(0);
    }
    
    private void populatePicker(){
        enterprisePicker.removeAllItems();
        int i=0;
        for (Enterprise enterprise: countyEnterpriseArray) {
            if (i == 0) {
                populateCountyPicker(enterprise.getCountyDirectory().getCountyDirectoryArray());
                i++;
            }
            enterprisePicker.addItem(enterprise);
        }
    }
    
    private void populateCountyPicker(ArrayList<County> countyArr){
        countyPicker.removeAllItems();
        int i=0;
        for (County county: countyArr) {
            if (i==0) {
                populateTableProduce(county);
                i++;
            }
            countyPicker.addItem(county);
        }
    }
    
    private void populateTableProduce(County county){
        DefaultTableModel model = (DefaultTableModel)tblProduce.getModel();
        model.setRowCount(0);
        //String dm = "Business.Role.LabAdminRole";
        
        for (Produce produce: county.getProduceDirectory().getProduceArray()) {
            if (produce.getStatus().equals("Denied")) {
                continue;
            }
            if (produce.getStatus().equals("Waiting")) {
                continue;
            }
            Object[] row = new Object[3];
            row[0] = produce;
            row[1] = produce.getQuantity();
            row[2] = produce.getPrice();
            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel17 = new javax.swing.JPanel();
        Enterprises1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        btnPlaceOrder = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Enterprises = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduce = new javax.swing.JTable();
        btnAddCart = new javax.swing.JButton();
        lblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        lblSelectCounty = new javax.swing.JLabel();
        countyPicker = new javax.swing.JComboBox();
        lblSelectEnterprise = new javax.swing.JLabel();
        enterprisePicker = new javax.swing.JComboBox();
        lblQuantityValidation = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        Enterprises1.setFont(new java.awt.Font("Myanmar MN", 1, 24)); // NOI18N
        Enterprises1.setText("Your Cart Items");
        Enterprises1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Enterprises1.setIconTextGap(0);

        tblCart.setBackground(new java.awt.Color(204, 204, 204));
        tblCart.setFont(new java.awt.Font("Myanmar MN", 0, 13)); // NOI18N
        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Produce", "Selected Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCart);

        lblTotal.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTotal.setText("Total Price:");

        txtMessage.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        txtMessage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMessageFocusGained(evt);
            }
        });
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMessageKeyTyped(evt);
            }
        });

        btnPlaceOrder.setBackground(new java.awt.Color(204, 204, 204));
        btnPlaceOrder.setFont(new java.awt.Font("Myanmar MN", 1, 14)); // NOI18N
        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPlaceOrder.setBorderPainted(false);
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        lblMessage.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        lblMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMessage.setText("Message:");

        txtTotalPrice.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        txtTotalPrice.setEnabled(false);
        txtTotalPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTotalPriceFocusGained(evt);
            }
        });
        txtTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPriceActionPerformed(evt);
            }
        });
        txtTotalPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalPriceKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Enterprises1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 392, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Enterprises1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Myanmar MN", 0, 24)); // NOI18N
        jLabel9.setText("Place Shipping Order");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(336, 336, 336)
                .addComponent(jLabel9)
                .addContainerGap(383, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        Enterprises.setFont(new java.awt.Font("Devanagari MT", 1, 24)); // NOI18N
        Enterprises.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Enterprises.setIconTextGap(0);

        tblProduce.setBackground(new java.awt.Color(204, 204, 204));
        tblProduce.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Produce", "Available Quantity", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblProduce);

        btnAddCart.setBackground(new java.awt.Color(204, 204, 204));
        btnAddCart.setFont(new java.awt.Font("Myanmar MN", 1, 14)); // NOI18N
        btnAddCart.setText("Add to Cart");
        btnAddCart.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddCart.setBorderPainted(false);
        btnAddCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCartActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        lblQuantity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblQuantity.setText("Quantity:");

        txtQuantity.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantityFocusGained(evt);
            }
        });
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantityKeyTyped(evt);
            }
        });

        lblSelectCounty.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        lblSelectCounty.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSelectCounty.setText("Select County:");

        countyPicker.setFont(new java.awt.Font("Myanmar MN", 0, 13)); // NOI18N
        countyPicker.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countyPicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countyPickerActionPerformed(evt);
            }
        });

        lblSelectEnterprise.setFont(new java.awt.Font("Myanmar MN", 0, 14)); // NOI18N
        lblSelectEnterprise.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSelectEnterprise.setText("Select Enterprise:");

        enterprisePicker.setFont(new java.awt.Font("Myanmar MN", 0, 13)); // NOI18N
        enterprisePicker.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterprisePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterprisePickerActionPerformed(evt);
            }
        });

        lblQuantityValidation.setFont(new java.awt.Font("Myanmar MN", 0, 12)); // NOI18N
        lblQuantityValidation.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuantityValidation))
                        .addGap(87, 87, 87)
                        .addComponent(btnAddCart, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblSelectEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(enterprisePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblSelectCounty, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(countyPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(208, 208, 208)))
                .addGap(30, 30, 30)
                .addComponent(Enterprises, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblQuantity)
                .addContainerGap(636, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Enterprises, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSelectCounty, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countyPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSelectEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterprisePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblQuantityValidation))
                    .addComponent(btnAddCart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(273, 273, 273))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMessageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMessageFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageFocusGained

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void txtMessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageKeyTyped

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // TODO add your handling code here:
        String message = txtMessage.getText();

        County manufacturingCounty = (County) countyPicker.getSelectedItem();
        Order order = new Order();

        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        int noOfRows = model.getRowCount();

        if (noOfRows == 0) {
            JOptionPane.showMessageDialog(this,"Your cart is empty","Warring",JOptionPane.WARNING_MESSAGE);
            return;
        }

        for (int i=0; i<noOfRows; i++) {
            Produce produce = (Produce) model.getValueAt(i, 0);
            Integer quant = (Integer) model.getValueAt(i, 1);
            produce.setQuantity(produce.getQuantity() - quant);
            order.addItem(produce, quant);
            System.out.println("*Order --->" + order  );
        }
        order.setPrice(Double.parseDouble(txtTotalPrice.getText()));

        ShippingOrderWR request = new ShippingOrderWR();
        request.setMessage(message);
        request.setCounty(manufacturingCounty);
        request.setSender(userAccount);
        request.setStatus("Order placed");
        request.setOrders(order);
        request.setVendor(vendor);
        
        System.out.println("---------------------------------------");
        System.out.println("request -------> "+ request);

        manufacturingCounty.addOrder(order);
        JOptionPane.showMessageDialog(this,"Order placed successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        if(manufacturingCounty ==null) {
            System.out.println("nonono");
        }
        else{
            manufacturingCounty.getWorkQueue().getWorkRequestListArray().add(request);
            userAccount.getWorkQueue().getWorkRequestListArray().add(request);
        }
        model.setRowCount(0);

        txtMessage.setText("");
        txtTotalPrice.setText("0");
        populatePicker();
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void txtTotalPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalPriceFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPriceFocusGained

    private void txtTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPriceActionPerformed

    private void txtTotalPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalPriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPriceKeyTyped

    private void btnAddCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCartActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblProduce.getSelectedRow();

        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to add","Warring",JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (isValidData()) {
            DefaultTableModel model = (DefaultTableModel) tblProduce.getModel();
            Produce produce = (Produce) model.getValueAt(selectedRowIndex, 0);
            DefaultTableModel model1 = (DefaultTableModel) tblCart.getModel();

            if (produce.getQuantity() < Integer.parseInt(txtQuantity.getText())) {
                JOptionPane.showMessageDialog(this,"Produce not available in adequate quantity","Warring",JOptionPane.WARNING_MESSAGE);
                return;
            }

            Object[] row = new Object[3];
            row[0] = produce;
            row[1] = Integer.parseInt(txtQuantity.getText());
            row[2] = Integer.parseInt(txtQuantity.getText())*produce.getPrice();
            model1.addRow(row);

            double total = Double.parseDouble(txtTotalPrice.getText()) + (Integer.parseInt(txtQuantity.getText())*produce.getPrice());
            txtTotalPrice.setText(String.valueOf(total));
            txtQuantity.setText("1");
            JOptionPane.showMessageDialog(this,"Produce added to cart successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAddCartActionPerformed

    private void txtQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusGained
        // TODO add your handling code here:
        lblQuantityValidation.setVisible(false);
    }//GEN-LAST:event_txtQuantityFocusGained

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityKeyTyped

    private void countyPickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countyPickerActionPerformed

        County manufacturingCounty = (County) countyPicker.getSelectedItem();
        if (manufacturingCounty != null) {
            populateTableProduce(manufacturingCounty);
        }
    }//GEN-LAST:event_countyPickerActionPerformed

    private void enterprisePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterprisePickerActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise = (Enterprise) enterprisePicker.getSelectedItem();
        if (enterprise != null) {
            populateCountyPicker(enterprise.getCountyDirectory().getCountyDirectoryArray());
        }
    }//GEN-LAST:event_enterprisePickerActionPerformed
    
    private boolean isValidData() {
        boolean isValid = true;
        
        if (txtQuantity.getText().isEmpty()) {
            isValid = false;
            hideShowValidation(lblQuantityValidation, "Please enter quantity");
            
        } else if (Integer.parseInt(txtQuantity.getText()) == 0) {
            isValid = false;
            hideShowValidation(lblQuantityValidation, "Quantity should be greater than 0");
            
        }
        
        return isValid;
    }
    
    // Common function to hide show validation labels
    private void hideShowValidation(JLabel lbl, String errorMessage) {
        if (errorMessage.isEmpty()) {
            lbl.setVisible(false);
        } else {
            lbl.setText(errorMessage);
            lbl.setVisible(true);
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Enterprises;
    private javax.swing.JLabel Enterprises1;
    private javax.swing.JButton btnAddCart;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JComboBox countyPicker;
    private javax.swing.JComboBox enterprisePicker;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblQuantityValidation;
    private javax.swing.JLabel lblSelectCounty;
    private javax.swing.JLabel lblSelectEnterprise;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblProduce;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables
}
